#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R                   &kp T                                                  &kp Y      &kp U  &lt 0 I    &kp O    &kp P
&kp A      &kp S         &kp D         &kp F                   &kp G      &kp LS(LG(S))              &kp MINUS        &kp H      &kp J  &kp K      &kp L    &kp ENTER
&kp Z      &kp X         &kp C         &kp V                   &kp B      &kp LEFT_SHIFT             &kp RIGHT_SHIFT  &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 4 ENTER  &lt 2 TAB  &lt_to_layer_0 1 CAPS      &kp BACKSPACE    &kp SPACE                             &lt_to_layer_0 3 ESC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&none            &none              &none     &none       &none                                                &none            &none     &kp EQUAL             &kp CARET              &kp PIPE
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH  &kp DOLLAR  &kp PERCENT     &none              &kp EQUAL         &kp AMPERSAND    &kp SQT   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none            &none              &none     &kp GRAVE   &kp LEFT_BRACE  &kp LESS_THAN      &kp GREATER_THAN  &kp RIGHT_BRACE  &kp PLUS  &kp ASTRK             &kp QUESTION           &kp UNDERSCORE
&none            &none              &none     &none       &trans          &none              &none             &none                                                                   &none
            >;
        };

        NUM {
            bindings = <
&kp F1  &kp F2  &kp F3        &kp F4        &kp F5                                                         &kp F6             &kp F7         &kp F8        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp N1  &kp N2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5      &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp NUMBER_6       &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0
&none   &none   &none         &kp AT_SIGN   &kp LEFT_BRACKET  &kp LEFT_SHIFT               &trans          &kp RIGHT_BRACKET  &kp SEMICOLON  &kp COLON     &kp SLASH             &kp BACKSLASH
&none   &trans  &trans        &none         &none             &none                        &trans          &trans                                                                &none
            >;
        };

        layer_6 {
            bindings = <
&none         &none         &none         &none         &trans                                   &none  &none  &none  &none  &none
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none      &bt BT_CLR      &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none      &bt BT_CLR_ALL  &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none      &none           &none                       &bt BT_CLR_ALL
            >;
        };

        ARROW {
            bindings = <
&none     &none           &kp UP_ARROW    &none            &none                      &kp C_AC_FORWARD  &none      &none      &none  &none
&kp HOME  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END  &none      &none  &kp C_AC_BACK     &mkp LCLK  &mkp RCLK  &none  &none
&none     &none           &none           &none            &none    &none      &none  &none             &none      &none      &none  &none
&none     &none           &none           &none            &none    &none      &none  &none                                          &none
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&none  &none  &none  &none  &none                    &kp C_AC_FORWARD  &none      &none      &none  &none
&none  &none  &none  &none  &none  &none      &none  &kp C_AC_BACK     &mkp LCLK  &mkp RCLK  &none  &none
&none  &none  &none  &none  &none  &none      &none  &none             &none      &none      &none  &none
&none  &none  &none  &none  &none  &none      &none  &none                                          &none
            >;
        };
    };
};
